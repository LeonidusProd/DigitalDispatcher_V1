from backend_connection import get_user_requests


START_MESSAGE = ("Привет, я \"Цифровой диспетчер\"!\n\n"
                 "Через меня можно обратиться в управляющую компанию и оставить аварийную заявку, "
                 "а так же посмотреть созданные вами заявки и их ход выполнения.\n\n"
                 "Какое действие вы хотите выполнить?")

FIRST_STEP_MESSAGE = ("Для начала укажите свой адрес. Выберите жилой комплекс и свой дом.\n\n"
                      "Также вы можете указать номер квартиры. Это не обязательно, но поможет быстрее найти вас.")

SELECT_COMPLEX_MESSAGE = "Выберите свой жилой комплекс"

SELECT_HOUSE_MESSAGE = "Выберите свой адрес"

INPUT_APARTMENT_MESSAGE = "Введите номер квартиры и отправьте его следующим сообщением"

INCORRECT_APARTMENT_MESSAGE = "Некорректный номер квартиры, повторите попытку."

SECOND_STEP_MESSAGE = ("Теперь кратко опишите причину вашего обращения и отправьте её следующим сообщением.\n\n"
                       "Также вы можете добавить фотографию, прикркпив её к сообщению. Это также не обязательно, но "
                       "позволит более точно понять причину обращения.")

THIRD_STEP_MESSAGE = "Для создания заявки нам необходимо узнать ваши имя, фамилию и номер телефона."

INPUT_SURNAME_MESSAGE = "Введите свою фамилию и отправьте её следующим сообщением"

INPUT_NAME_MESSAGE = "Введите своё имя и отправьте его следующим сообщением"

INPUT_PATRONYMIC_MESSAGE = ("Введите своё отчество и отправьте её следующим сообщением. Это не обязательно, "
                            "если не хотите его указывать отправьте в сообщении знак минус (-).")

INPUT_PHONE_MENU = ("Введите свой номер телефона и отправьте его следующим сообщением.\n"
                    "Вы также можете поделиться номером телефона, привязанным к аккаунту Telegram.")

REQUEST_SENDED_MESSAGE = "Заявка успешо создана! В скором времени мы с вами свяжемся."


async def user_requests_message(user_id):
    user_requests = await get_user_requests(user_id)
    if len(user_requests) == 0:
        return "Вы ещё не отправили ни одной заявки."
    else:
        message = "Ваши заявки:\n"
        i = 1
        for request in user_requests:
            message += (f"{i}. Заявка от {request['date']}.\n"
                        f"Статус выполнения: {request['status_name']}.\n"
                        f"Адрес: {request['address']}.\n"
                        f"Информация заявки: {str(request['info'])[:50]}...\n\n")

            i += 1

        return message
