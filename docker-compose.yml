version: '3.8'

services:
  backend:
    restart: always
    build:
      context: .
      dockerfile: ./backend_config/Dockerfile
    image: dd_backend
    container_name: dd_backend
    volumes:
      - dd_back_static:/dd_back/static
      - dd_back_media:/dd_back/media
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - app-network
    command: sh -c "python manage.py collectstatic --no-input &&
      python manage.py migrate &&
      python manage.py loaddata digdispdata.json  &&
      gunicorn backend_config.wsgi -b 0.0.0.0:8000"

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - "8080:8080"
    env_file:
      - ./frontend/.env
    networks:
      - app-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/static:/app/static
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge